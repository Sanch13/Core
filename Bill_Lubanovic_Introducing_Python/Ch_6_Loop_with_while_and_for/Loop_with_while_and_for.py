from Bill_Lubanovic_Introducing_Python.Ch_2_Data_Types.Python_types import replace_sep_in_sting

replace_sep_in_sting("""
""")

"""В Python итераторы часто используются по одной простой причине. Они позволяют 
вам проходить структуры данных без знания того, насколько эти структуры велики 
и как реализованы. Вы даже можете обратиться к данным, которые были созданы 
во время работы программы. Это позволяет обрабатывать потоки данных, которые 
в противном случае не поместились бы в память компьютера."""


# TASKS   TASKS   TASKS   TASKS   TASKS   TASKS   TASKS   TASKS   TASKS   TASKS   TASKS   TASKS
"""6 1.  Используйте цикл for, чтобы вывести на экран значения списка [3, 2, 1, 0]."""
lst = [3, 2, 1, 0]
for x in lst:
    print(x, end=' ')
print()
###################################################################################################
"""6 2.  Присвойте значение 7 переменной guess_me и значение 1 переменной number. 
Напишите цикл while, который сравнивает переменные number и guess_me. 
Выведите строку 'too low', если значение переменной start меньше значения переменной guess_me. 
Если значение переменной number равно значению переменной guess_me, выведите строку 'found it!'
 и выйдите из цикла. Если значение переменной number больше значения переменной guess_me, 
 выведите строку 'oops' и выйдите из цикла. Увеличьте значение переменной number на 
выходе из цикла."""
# guess_me = 7
# number = 1
# while guess_me != number:
#     if number < guess_me:
#         print(f'too low')
#     elif number > guess_me:
#         print(f'oops')
#         break
#     number += 1
# else:
#     print(f'found it!')
###################################################################################################
"""6 3.  Присвойте значение 5 переменной guess_me. Используйте цикл for для того, 
чтобы проитерировать с помощью переменной number по диапазону range(10). 
Если значение переменной number меньше, чем значение guess_me, выведите 
на экран сообщение 'too low'. Если оно равно значению guess_me — выведите 
сообщение 'found it!', а затем выйдите из цикла. Если значение переменной 
number больше, чем guess_me, выведите на экран сообщение 'oops' и выйдите 
из цикла."""
guess_me = 5
for number in range(10):
    if number < guess_me:
        print(f'too low')
    elif number > guess_me:
        print(f'oops')
        break
    else:
        print(f'found it')
        break






